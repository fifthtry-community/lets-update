-- string title: `lets-update`: Database Schema

-- ds.site-page: $title

-- ds.heading-large: $title

This app assumes every domain is a single user domain. This means for companies
and other orgs, the `cdp_feed` table should not be used. Orgs can create updates
so the `cdp_update` table should be used.

-- ds.heading-medium: `cdp_feed` Table

-- ds.code:
lang: sql

CREATE TABLE cdp_feed (
    id INTEGER PRIMARY KEY,

    \-- ID of the corresponding update
    update_id INTEGER NOT NULL,

    \-- Type of update source (e.g., Instagram, GitHub, Twitter, etc.)
    update_source TEXT NOT NULL,

    \-- Foreign key to the user who created the update
    user_id INTEGER NOT NULL,

    \-- Type of content (text, quote, link, review, testimonial, greeting,
    \-- photo, video, workout, etc.)
    content_type TEXT NOT NULL,

    \-- JSON field to store the content of the update
    content TEXT NOT NULL,

    \-- JSON field to store links for media posts
    links TEXT,

    \-- JSON: Comma-separated list of tags
    tags TEXT,

    \-- JSON: Comma-separated list of tags added by the user
    my_tags TEXT,

    \-- Timestamp of post creation
    created_at INTEGER NOT NULL,

    \-- Timestamp of last update
    updated_at INTEGER NOT NULL,

    \-- Read/unread status of the update
    read INTEGER DEFAULT 0 NOT NULL,

    \-- archived stuff dont show up in the feed
    archived INTEGER DEFAULT 0 NOT NULL,

    FOREIGN KEY (user_id) REFERENCES fastn_user(id)
) STRICT;


-- ds.heading-medium: `cdp_update` Table

-- ds.code:
lang: sql

CREATE TABLE cdp_update (
    id INTEGER PRIMARY KEY,

    \-- Type of content (text, quote, link, review, testimonial, greeting,
    \-- photo, video, workout, etc.)
    content_type TEXT NOT NULL,

    \-- JSON field to store the content of the update
    content TEXT,

    \-- JSON field to store links for media posts
    links TEXT,

    \-- JSON: list of tags
    tags TEXT,

    \-- Timestamp of post creation
    created_at INTEGER NOT NULL,

    \-- Timestamp of last update
    updated_at INTEGER NOT NULL,

    \-- ID of the post this post is replying to (foreign key to cdp_feed)
    reply_to INTEGER NULL,

    \-- Foreign key to the user who created the update
    user_id INTEGER NOT NULL,

    \-- Public/private status of the update
    is_public INTEGER DEFAULT 0 NOT NULL,

    FOREIGN KEY (reply_to) REFERENCES cdp_feed(id),
    FOREIGN KEY (user_id) REFERENCES fastn_user(id)
);

-- end: ds.site-page
